#include <random>
#include <vector>

#include <iostream>
using namespace std;

const int tamx = 50, tamy = 50, num_salas = ((tamx + tamy) / 2) / 10, max_errores = (tamx + tamy) / 5;

const char
c_pared = '#',
c_puerta = 'P',
c_obstaculo = 'O',
c_explosivo = 'X',
c_trampa = 'T',
c_ene_ran = 'e',
c_ene_melee = 'E',
c_cura = 'C',
c_recompensa = 'R',
c_salida = 'S',
c_vacio = ' ';


const int
i_suelo = 31, //comprobado ok

i_pared_negro = 311,    //comprobado ok

i_pared_d = 77,     //comprobado ok
i_pared_l = 129,    //comprobado ok
i_pared_r = 130,    //comprobado ok
i_pared_u = 2,     //comprobado ok
i_pared_u2 = 27,     //comprobado ok

i_pared_esquina_peque単a_dl = 154,//comprobado ok
i_pared_esquina_peque単a_dr = 155,//comprobado ok
i_pared_esquina_peque単a_ul = 104,//comprobado ok
i_pared_esquina_peque単a_ur = 105,//comprobado ok

i_pared_esquina_grande_dl = 101,//comprobado ok
i_pared_esquina_grande_dr = 103,//comprobado ok
i_pared_esquina_grande_ur = 78,//comprobado ok
i_pared_esquina_grande_ul = 76;//comprobado ok

struct coordenada {
    int y, x;
};

struct sala {
    int tamx, tamy;
    vector<coordenada> puerta;
    vector<coordenada> obstaculo;
    vector<coordenada> pared;
    vector<coordenada> enemigo_melee;
    vector<coordenada> enemigo_ranged;
    vector<coordenada> explosivo;
    vector<coordenada> trampa;
    vector<coordenada> cura;
    vector<coordenada> recompensa;
    vector<coordenada> salida;
};

sala salaPPal = {
        5,
        5,
        //puerta arriba, izquierda,derecha, abajo
        {{0,2},{2,0},{2,4},{4,2}},//puertas
        {},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 0,1},{ 4,1},{ 0,2},{ 4,2},{ 0,3},{ 4,3},{ 0,4},{ 1,4},{ 3,4},{ 4,4}},//paredes
        {},//enemigos melee
        {},//enemigos ranged
        {},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {{2,2}}//salidas mazmorra

};

vector<sala> sala_11x11{
    {
            11,
            11,
            //puerta arriba, izquierda,derecha, abajo
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 4,2},{ 5,2},{ 6,2},{ 2,4},{ 8,4},{ 2,5},{ 8,5},{ 2,6},{ 8,6},{ 4,8},{ 5,8},{ 6,8}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 1,1},{ 2,1},{ 8,1},{ 9,1},{ 10,1},{ 0,2},{ 1,2},{ 9,2},{ 10,2},{ 0,3},{ 10,3},{ 0,4},{ 10,4},{ 0,6},{ 10,6},{ 0,7},{ 10,7},{ 0,8},{ 1,8},{ 9,8},{ 10,8},{ 0,9},{ 1,9},{ 2,9},{ 8,9},{ 9,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {},//enemigos melee
            {{ 5,5}},//enemigos ranged
            {{ 3,3},{ 7,3},{ 3,7},{ 7,7}},//explosivos
            {},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            11,
            11,
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 7,1},{ 3,2},{ 7,2},{ 2,3},{ 7,3},{ 8,3},{ 9,3},{ 1,7},{ 2,7},{ 3,7},{ 8,7},{ 3,8},{ 7,8},{ 3,9}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 10,1},{ 0,2},{ 2,2},{ 10,2},{ 0,3},{ 3,3},{ 10,3},{ 0,4},{ 4,4},{ 10,4},{ 5,5},{ 0,6},{ 6,6},{ 10,6},{ 0,7},{ 7,7},{ 10,7},{ 0,8},{ 8,8},{ 10,8},{ 0,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {},//enemigos melee
            {},//enemigos ranged
            {{ 3,1},{ 9,1},{ 1,3},{ 9,7},{ 1,9},{ 7,9}},//explosivos
            {{ 8,1},{ 4,3},{ 6,3},{ 3,6},{ 7,6},{ 4,7},{ 6,7},{ 2,9}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            11,
            11,
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 7,1},{ 3,2},{ 7,2},{ 2,3},{ 7,3},{ 8,3},{ 9,3},{ 1,7},{ 2,7},{ 3,7},{ 8,7},{ 3,8},{ 7,8},{ 3,9}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 10,1},{ 0,2},{ 2,2},{ 10,2},{ 0,3},{ 3,3},{ 10,3},{ 0,4},{ 4,4},{ 10,4},{ 5,5},{ 0,6},{ 6,6},{ 10,6},{ 0,7},{ 7,7},{ 10,7},{ 0,8},{ 8,8},{ 10,8},{ 0,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 5,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {},//enemigos melee
            {},//enemigos ranged
            {{ 3,1},{ 9,1},{ 1,3},{ 9,7},{ 1,9},{ 7,9}},//explosivos
            {{ 9,2},{ 4,3},{ 6,3},{ 3,4},{ 7,4},{ 3,6},{ 7,6},{ 4,7},{ 6,7},{ 1,8}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            11,
            11,
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 4,3},{ 7,4},{ 3,6},{ 6,7}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 10,1},{ 0,2},{ 10,2},{ 0,3},{ 3,3},{ 5,3},{ 6,3},{ 7,3},{ 10,3},{ 0,4},{ 3,4},{ 10,4},{ 3,5},{ 7,5},{ 0,6},{ 7,6},{ 10,6},{ 0,7},{ 3,7},{ 4,7},{ 5,7},{ 7,7},{ 10,7},{ 0,8},{ 10,8},{ 0,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {{ 5,5}},//enemigos melee
            {},//enemigos ranged
            {{ 3,2},{ 8,3},{ 2,7},{ 7,8}},//explosivos
            {{ 3,1},{ 9,3},{ 1,7},{ 7,9}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            11,
            11,
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 4,3},{ 7,4},{ 3,6},{ 6,7}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 10,1},{ 0,2},{ 10,2},{ 0,3},{ 3,3},{ 5,3},{ 6,3},{ 7,3},{ 10,3},{ 0,4},{ 3,4},{ 10,4},{ 3,5},{ 7,5},{ 0,6},{ 7,6},{ 10,6},{ 0,7},{ 3,7},{ 4,7},{ 5,7},{ 7,7},{ 10,7},{ 0,8},{ 10,8},{ 0,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {},//enemigos melee
            {{ 5,5}},//enemigos ranged
            {{ 3,2},{ 8,3},{ 2,7},{ 7,8}},//explosivos
            {{ 3,1},{ 9,3},{ 1,7},{ 7,9}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            11,
            11,
            {{ 0,5},{ 5,0},{ 5,10},{ 10,5}},//puertas
            {{ 4,4},{ 6,6}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 6,0},{ 7,0},{ 8,0},{ 9,0},{ 10,0},{ 0,1},{ 10,1},{ 0,2},{ 10,2},{ 0,3},{ 10,3},{ 0,4},{ 10,4},{ 5,5},{ 10,5},{ 0,6},{ 10,6},{ 0,7},{ 10,7},{ 0,8},{ 10,8},{ 0,9},{ 10,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10}},//paredes
            {{ 1,9}},//enemigos melee
            {{ 9,1}},//enemigos ranged
            {{ 2,1},{ 1,2},{ 4,3},{ 3,4},{ 7,6},{ 6,7},{ 9,8},{ 8,9}},//explosivos
            {{ 1,1},{ 2,2},{ 3,3},{ 7,7},{ 8,8},{ 9,9}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    }
};

vector<sala> sala_15x15{
    {
            15,
            15,
            {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
            {},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 9,1},{ 14,1},{ 0,2},{ 2,2},{ 3,2},{ 4,2},{ 5,2},{ 6,2},{ 7,2},{ 8,2},{ 9,2},{ 11,2},{ 12,2},{ 14,2},{ 0,3},{ 2,3},{ 4,3},{ 12,3},{ 14,3},{ 0,4},{ 4,4},{ 6,4},{ 7,4},{ 8,4},{ 9,4},{ 10,4},{ 11,4},{ 12,4},{ 14,4},{ 0,5},{ 1,5},{ 2,5},{ 4,5},{ 7,5},{ 12,5},{ 14,5},{ 0,6},{ 2,6},{ 4,6},{ 10,6},{ 12,6},{ 14,6},{ 2,7},{ 4,7},{ 5,7},{ 9,7},{ 10,7},{ 12,7},{ 0,8},{ 2,8},{ 4,8},{ 10,8},{ 12,8},{ 14,8},{ 0,9},{ 2,9},{ 7,9},{ 10,9},{ 12,9},{ 13,9},{ 14,9},{ 0,10},{ 2,10},{ 3,10},{ 4,10},{ 5,10},{ 6,10},{ 7,10},{ 8,10},{ 10,10},{ 14,10},{ 0,11},{ 2,11},{ 10,11},{ 12,11},{ 14,11},{ 0,12},{ 2,12},{ 3,12},{ 5,12},{ 6,12},{ 7,12},{ 8,12},{ 9,12},{ 10,12},{ 11,12},{ 12,12},{ 14,12},{ 0,13},{ 5,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
            {{ 3,3},{ 11,3},{ 3,11},{ 11,11}},//enemigos melee
            {},//enemigos ranged
            {},//explosivos
            {},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            15,
            15,
            {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
            {{ 9,2},{ 2,5},{ 12,9},{ 5,12}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
            {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos melee
            {},//enemigos ranged
            {{ 9,4},{ 4,5},{ 10,9},{ 5,10}},//explosivos
            {{ 6,1},{ 8,1},{ 12,1},{ 1,2},{ 2,2},{ 3,2},{ 4,2},{ 6,2},{ 8,2},{ 10,2},{ 12,2},{ 6,3},{ 8,3},{ 10,3},{ 12,3},{ 2,4},{ 3,4},{ 4,4},{ 5,4},{ 6,4},{ 8,4},{ 10,4},{ 12,4},{ 8,5},{ 10,5},{ 1,6},{ 2,6},{ 3,6},{ 4,6},{ 5,6},{ 6,6},{ 8,6},{ 10,6},{ 11,6},{ 12,6},{ 13,6},{ 1,8},{ 2,8},{ 3,8},{ 4,8},{ 6,8},{ 8,8},{ 9,8},{ 10,8},{ 11,8},{ 12,8},{ 13,8},{ 4,9},{ 6,9},{ 2,10},{ 4,10},{ 6,10},{ 8,10},{ 9,10},{ 10,10},{ 11,10},{ 12,10},{ 2,11},{ 4,11},{ 6,11},{ 8,11},{ 2,12},{ 4,12},{ 6,12},{ 8,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 2,13},{ 6,13},{ 8,13}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
            15,
            15,
            {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
            {{ 9,2},{ 2,5},{ 12,9},{ 5,12}},//obstaculos
            {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
            {},//enemigos melee
            {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos ranged
            {{ 9,4},{ 4,5},{ 10,9},{ 5,10}},//explosivos
            {{ 6,1},{ 8,1},{ 12,1},{ 1,2},{ 2,2},{ 3,2},{ 4,2},{ 6,2},{ 8,2},{ 10,2},{ 12,2},{ 6,3},{ 8,3},{ 10,3},{ 12,3},{ 2,4},{ 3,4},{ 4,4},{ 5,4},{ 6,4},{ 8,4},{ 10,4},{ 12,4},{ 8,5},{ 10,5},{ 1,6},{ 2,6},{ 3,6},{ 4,6},{ 5,6},{ 6,6},{ 8,6},{ 10,6},{ 11,6},{ 12,6},{ 13,6},{ 1,8},{ 2,8},{ 3,8},{ 4,8},{ 6,8},{ 8,8},{ 9,8},{ 10,8},{ 11,8},{ 12,8},{ 13,8},{ 4,9},{ 6,9},{ 2,10},{ 4,10},{ 6,10},{ 8,10},{ 9,10},{ 10,10},{ 11,10},{ 12,10},{ 2,11},{ 4,11},{ 6,11},{ 8,11},{ 2,12},{ 4,12},{ 6,12},{ 8,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 2,13},{ 6,13},{ 8,13}},//trampas
            {},//curas
            {},//recompensas
            {},//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 4,1},{ 6,1},{ 8,1},{ 10,1},{ 4,2},{ 6,2},{ 8,2},{ 10,2},{ 4,3},{ 6,3},{ 8,3},{ 10,3},{ 1,4},{ 2,4},{ 3,4},{ 4,4},{ 5,4},{ 7,4},{ 9,4},{ 10,4},{ 11,4},{ 12,4},{ 13,4},{ 4,5},{ 6,5},{ 8,5},{ 10,5},{ 1,6},{ 2,6},{ 3,6},{ 5,6},{ 7,6},{ 9,6},{ 11,6},{ 12,6},{ 13,6},{ 4,7},{ 6,7},{ 8,7},{ 10,7},{ 1,8},{ 2,8},{ 3,8},{ 4,8},{ 5,8},{ 7,8},{ 9,8},{ 10,8},{ 11,8},{ 12,8},{ 13,8},{ 4,9},{ 6,9},{ 8,9},{ 10,9},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 5,10},{ 7,10},{ 9,10},{ 10,10},{ 11,10},{ 12,10},{ 13,10},{ 4,11},{ 6,11},{ 8,11},{ 10,11},{ 4,12},{ 6,12},{ 8,12},{ 10,12},{ 4,13},{ 6,13},{ 8,13},{ 10,13}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {},//enemigos melee
        {},//enemigos ranged
        {{ 7,2},{ 6,4},{ 8,4},{ 7,5},{ 4,6},{ 6,6},{ 8,6},{ 10,6},{ 2,7},{ 7,7},{ 12,7},{ 6,8},{ 8,8},{ 7,9},{ 6,10},{ 8,10},{ 7,12}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra
    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 5,1},{ 9,1},{ 5,2},{ 9,2},{ 5,3},{ 9,3},{ 9,4},{ 1,5},{ 2,5},{ 3,5},{ 4,5},{ 5,5},{ 9,5},{ 11,5},{ 12,5},{ 13,5},{ 1,9},{ 2,9},{ 3,9},{ 5,9},{ 9,9},{ 10,9},{ 11,9},{ 12,9},{ 13,9},{ 5,10},{ 5,11},{ 9,11},{ 5,12},{ 9,12},{ 5,13},{ 9,13}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {},//enemigos melee
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos ranged
        {{ 5,4},{ 10,5},{ 4,9},{ 9,10}},//explosivos
        {{ 11,2},{ 2,3},{ 3,3},{ 4,3},{ 11,3},{ 11,4},{ 3,10},{ 3,11},{ 10,11},{ 11,11},{ 12,11},{ 3,12}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 5,1},{ 9,1},{ 5,2},{ 9,2},{ 5,3},{ 9,3},{ 9,4},{ 1,5},{ 2,5},{ 3,5},{ 4,5},{ 5,5},{ 9,5},{ 11,5},{ 12,5},{ 13,5},{ 1,9},{ 2,9},{ 3,9},{ 5,9},{ 9,9},{ 10,9},{ 11,9},{ 12,9},{ 13,9},{ 5,10},{ 5,11},{ 9,11},{ 5,12},{ 9,12},{ 5,13},{ 9,13}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos MELEE
        {},//enemigos RANGED
        {{ 5,4},{ 10,5},{ 4,9},{ 9,10}},//explosivos
        {{ 11,2},{ 2,3},{ 3,3},{ 4,3},{ 11,3},{ 11,4},{ 3,10},{ 3,11},{ 10,11},{ 11,11},{ 12,11},{ 3,12}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 6,4},{ 7,4},{ 8,4},{ 4,6},{ 10,6},{ 4,7},{ 10,7},{ 4,8},{ 10,8},{ 6,10},{ 7,10},{ 8,10}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos melee
        {{ 7,7}},//enemigos ranged
        {{ 5,5},{ 9,5},{ 5,9},{ 9,9}},//explosivos
        {{ 4,1},{ 10,1},{ 5,2},{ 9,2},{ 6,3},{ 7,3},{ 8,3},{ 1,4},{ 13,4},{ 2,5},{ 12,5},{ 3,6},{ 11,6},{ 3,7},{ 11,7},{ 3,8},{ 11,8},{ 2,9},{ 12,9},{ 1,10},{ 13,10},{ 6,11},{ 7,11},{ 8,11},{ 5,12},{ 9,12},{ 4,13},{ 10,13}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 6,4},{ 7,4},{ 8,4},{ 4,6},{ 10,6},{ 4,7},{ 10,7},{ 4,8},{ 10,8},{ 6,10},{ 7,10},{ 8,10}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 14,6},{ 0,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {{ 7,7}},//enemigos melee
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos ranged
        {{ 5,5},{ 9,5},{ 5,9},{ 9,9}},//explosivos
        {{ 4,1},{ 10,1},{ 5,2},{ 9,2},{ 6,3},{ 7,3},{ 8,3},{ 1,4},{ 13,4},{ 2,5},{ 12,5},{ 3,6},{ 11,6},{ 3,7},{ 11,7},{ 3,8},{ 11,8},{ 2,9},{ 12,9},{ 1,10},{ 13,10},{ 6,11},{ 7,11},{ 8,11},{ 5,12},{ 9,12},{ 4,13},{ 10,13}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 3,1},{ 11,1},{ 2,2},{ 12,2},{ 1,3},{ 13,3},{ 1,11},{ 13,11},{ 2,12},{ 12,12},{ 3,13},{ 11,13}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 8,1},{ 14,1},{ 0,2},{ 6,2},{ 8,2},{ 14,2},{ 0,3},{ 5,3},{ 9,3},{ 14,3},{ 0,4},{ 5,4},{ 9,4},{ 14,4},{ 0,5},{ 3,5},{ 4,5},{ 10,5},{ 11,5},{ 14,5},{ 0,6},{ 1,6},{ 2,6},{ 12,6},{ 14,6},{ 0,8},{ 2,8},{ 12,8},{ 13,8},{ 14,8},{ 0,9},{ 3,9},{ 4,9},{ 10,9},{ 11,9},{ 14,9},{ 0,10},{ 5,10},{ 9,10},{ 14,10},{ 0,11},{ 5,11},{ 9,11},{ 14,11},{ 0,12},{ 6,12},{ 8,12},{ 14,12},{ 0,13},{ 6,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos melee
        {{ 7,7}},//enemigos ranged
        {{ 3,3},{ 11,3},{ 3,11},{ 11,11}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {{ 3,1},{ 11,1},{ 2,2},{ 12,2},{ 1,3},{ 13,3},{ 1,11},{ 13,11},{ 2,12},{ 12,12},{ 3,13},{ 11,13}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 8,1},{ 14,1},{ 0,2},{ 6,2},{ 8,2},{ 14,2},{ 0,3},{ 5,3},{ 9,3},{ 14,3},{ 0,4},{ 5,4},{ 9,4},{ 14,4},{ 0,5},{ 3,5},{ 4,5},{ 10,5},{ 11,5},{ 14,5},{ 0,6},{ 1,6},{ 2,6},{ 12,6},{ 14,6},{ 0,8},{ 2,8},{ 12,8},{ 13,8},{ 14,8},{ 0,9},{ 3,9},{ 4,9},{ 10,9},{ 11,9},{ 14,9},{ 0,10},{ 5,10},{ 9,10},{ 14,10},{ 0,11},{ 5,11},{ 9,11},{ 14,11},{ 0,12},{ 6,12},{ 8,12},{ 14,12},{ 0,13},{ 6,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {{ 7,7}},//enemigos MELEE
        {{ 1,1},{ 13,1},{ 1,13},{ 13,13}},//enemigos RANGED
        {{ 3,3},{ 11,3},{ 3,11},{ 11,11}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 4,1},{ 8,1},{ 12,1},{ 14,1},{ 0,2},{ 2,2},{ 4,2},{ 6,2},{ 8,2},{ 10,2},{ 12,2},{ 14,2},{ 0,3},{ 2,3},{ 4,3},{ 6,3},{ 8,3},{ 10,3},{ 12,3},{ 14,3},{ 0,4},{ 2,4},{ 4,4},{ 6,4},{ 8,4},{ 10,4},{ 12,4},{ 14,4},{ 0,5},{ 2,5},{ 4,5},{ 6,5},{ 8,5},{ 10,5},{ 12,5},{ 14,5},{ 0,6},{ 2,6},{ 4,6},{ 6,6},{ 8,6},{ 10,6},{ 12,6},{ 14,6},{ 2,7},{ 4,7},{ 6,7},{ 8,7},{ 10,7},{ 12,7},{ 0,8},{ 2,8},{ 4,8},{ 6,8},{ 8,8},{ 10,8},{ 12,8},{ 14,8},{ 0,9},{ 2,9},{ 4,9},{ 6,9},{ 8,9},{ 10,9},{ 12,9},{ 14,9},{ 0,10},{ 2,10},{ 4,10},{ 6,10},{ 8,10},{ 10,10},{ 12,10},{ 14,10},{ 0,11},{ 2,11},{ 4,11},{ 6,11},{ 8,11},{ 10,11},{ 12,11},{ 14,11},{ 0,12},{ 2,12},{ 4,12},{ 6,12},{ 8,12},{ 10,12},{ 12,12},{ 14,12},{ 0,13},{ 2,13},{ 6,13},{ 10,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {},//enemigos melee
        {},//enemigos ranged
        {},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        15,
        15,
        {{ 0,7},{ 7,0},{ 7,14},{ 14,7}},//puertas
        {},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 8,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 0,1},{ 14,1},{ 0,2},{ 1,2},{ 2,2},{ 3,2},{ 4,2},{ 5,2},{ 6,2},{ 7,2},{ 8,2},{ 9,2},{ 10,2},{ 11,2},{ 12,2},{ 14,2},{ 0,3},{ 14,3},{ 0,4},{ 2,4},{ 3,4},{ 4,4},{ 5,4},{ 6,4},{ 7,4},{ 8,4},{ 9,4},{ 10,4},{ 11,4},{ 12,4},{ 13,4},{ 14,4},{ 0,5},{ 14,5},{ 0,6},{ 1,6},{ 2,6},{ 3,6},{ 4,6},{ 5,6},{ 6,6},{ 7,6},{ 8,6},{ 9,6},{ 10,6},{ 11,6},{ 12,6},{ 14,6},{ 0,8},{ 2,8},{ 3,8},{ 4,8},{ 5,8},{ 6,8},{ 7,8},{ 8,8},{ 9,8},{ 10,8},{ 11,8},{ 12,8},{ 13,8},{ 14,8},{ 0,9},{ 14,9},{ 0,10},{ 1,10},{ 2,10},{ 3,10},{ 4,10},{ 5,10},{ 6,10},{ 7,10},{ 8,10},{ 9,10},{ 10,10},{ 11,10},{ 12,10},{ 14,10},{ 0,11},{ 14,11},{ 0,12},{ 2,12},{ 3,12},{ 4,12},{ 5,12},{ 6,12},{ 7,12},{ 8,12},{ 9,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 14,12},{ 0,13},{ 14,13},{ 0,14},{ 1,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 6,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14}},//paredes
        {},//enemigos melee
        {},//enemigos ranged
        {},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    }

};

vector<sala> sala_17x17{
    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 9,1},{ 16,1},{ 0,2},{ 2,2},{ 3,2},{ 4,2},{ 5,2},{ 6,2},{ 7,2},{ 9,2},{ 11,2},{ 12,2},{ 13,2},{ 14,2},{ 16,2},{ 0,3},{ 2,3},{ 9,3},{ 11,3},{ 14,3},{ 16,3},{ 0,4},{ 2,4},{ 5,4},{ 7,4},{ 9,4},{ 11,4},{ 14,4},{ 16,4},{ 0,5},{ 2,5},{ 3,5},{ 4,5},{ 5,5},{ 7,5},{ 9,5},{ 11,5},{ 12,5},{ 14,5},{ 16,5},{ 0,6},{ 7,6},{ 9,6},{ 14,6},{ 16,6},{ 0,7},{ 1,7},{ 2,7},{ 3,7},{ 4,7},{ 5,7},{ 6,7},{ 7,7},{ 9,7},{ 10,7},{ 11,7},{ 12,7},{ 14,7},{ 16,7},{ 0,9},{ 2,9},{ 4,9},{ 5,9},{ 6,9},{ 7,9},{ 9,9},{ 10,9},{ 11,9},{ 12,9},{ 13,9},{ 14,9},{ 15,9},{ 16,9},{ 0,10},{ 2,10},{ 7,10},{ 9,10},{ 16,10},{ 0,11},{ 2,11},{ 4,11},{ 5,11},{ 7,11},{ 9,11},{ 11,11},{ 12,11},{ 13,11},{ 14,11},{ 16,11},{ 0,12},{ 2,12},{ 5,12},{ 7,12},{ 9,12},{ 11,12},{ 14,12},{ 16,12},{ 0,13},{ 2,13},{ 5,13},{ 7,13},{ 14,13},{ 16,13},{ 0,14},{ 2,14},{ 3,14},{ 4,14},{ 5,14},{ 7,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14},{ 16,14},{ 0,15},{ 7,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {},//enemigos melee
        {},//enemigos ranged
        {{ 8,2},{ 8,4},{ 8,6},{ 2,8},{ 4,8},{ 6,8},{ 8,8},{ 10,8},{ 12,8},{ 14,8},{ 8,10},{ 8,12},{ 8,14}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },
    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {{ 8,7},{ 7,8},{ 8,8},{ 9,8},{ 8,9}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 3,1},{ 7,1},{ 10,1},{ 14,1},{ 16,1},{ 0,2},{ 1,2},{ 3,2},{ 5,2},{ 7,2},{ 8,2},{ 10,2},{ 12,2},{ 16,2},{ 0,3},{ 5,3},{ 10,3},{ 12,3},{ 14,3},{ 15,3},{ 16,3},{ 0,4},{ 2,4},{ 3,4},{ 4,4},{ 5,4},{ 6,4},{ 7,4},{ 8,4},{ 9,4},{ 10,4},{ 12,4},{ 16,4},{ 0,5},{ 8,5},{ 12,5},{ 13,5},{ 14,5},{ 16,5},{ 0,6},{ 1,6},{ 2,6},{ 3,6},{ 4,6},{ 6,6},{ 7,6},{ 8,6},{ 10,6},{ 12,6},{ 16,6},{ 0,7},{ 4,7},{ 10,7},{ 12,7},{ 14,7},{ 15,7},{ 16,7},{ 2,8},{ 4,8},{ 5,8},{ 6,8},{ 10,8},{ 11,8},{ 12,8},{ 14,8},{ 0,9},{ 1,9},{ 2,9},{ 4,9},{ 6,9},{ 12,9},{ 16,9},{ 0,10},{ 4,10},{ 6,10},{ 8,10},{ 9,10},{ 10,10},{ 12,10},{ 13,10},{ 14,10},{ 15,10},{ 16,10},{ 0,11},{ 2,11},{ 3,11},{ 4,11},{ 8,11},{ 16,11},{ 0,12},{ 4,12},{ 6,12},{ 7,12},{ 8,12},{ 9,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 14,12},{ 16,12},{ 0,13},{ 1,13},{ 2,13},{ 4,13},{ 6,13},{ 11,13},{ 16,13},{ 0,14},{ 4,14},{ 6,14},{ 8,14},{ 9,14},{ 11,14},{ 13,14},{ 15,14},{ 16,14},{ 0,15},{ 2,15},{ 6,15},{ 9,15},{ 13,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {{ 5,6},{ 11,10}},//enemigos melee
        {{ 10,5},{ 6,11}},//enemigos ranged
        {{ 9,6},{ 6,7},{ 10,9},{ 7,10}},//explosivos
        {{ 2,2},{ 14,2},{ 6,5},{ 11,6},{ 5,10},{ 10,11},{ 2,14},{ 14,14}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {{ 4,1},{ 12,1},{ 5,2},{ 11,2},{ 6,3},{ 7,3},{ 9,3},{ 10,3},{ 1,4},{ 15,4},{ 2,5},{ 14,5},{ 3,6},{ 13,6},{ 3,7},{ 13,7},{ 3,9},{ 13,9},{ 3,10},{ 13,10},{ 2,11},{ 14,11},{ 1,12},{ 15,12},{ 6,13},{ 7,13},{ 9,13},{ 10,13},{ 5,14},{ 11,14},{ 4,15},{ 12,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 16,1},{ 0,2},{ 16,2},{ 0,3},{ 16,3},{ 0,4},{ 16,4},{ 0,5},{ 16,5},{ 0,6},{ 16,6},{ 0,7},{ 16,7},{ 0,9},{ 16,9},{ 0,10},{ 16,10},{ 0,11},{ 16,11},{ 0,12},{ 16,12},{ 0,13},{ 16,13},{ 0,14},{ 16,14},{ 0,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {{ 7,7},{ 9,7},{ 7,9},{ 9,9}},//enemigos melee
        {},//enemigos ranged
        {{ 8,3},{ 3,8},{ 13,8},{ 8,13}},//explosivos
        {{ 7,5},{ 9,5},{ 5,7},{ 8,7},{ 11,7},{ 7,8},{ 9,8},{ 5,9},{ 8,9},{ 11,9},{ 7,11},{ 9,11}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {{ 4,1},{ 12,1},{ 5,2},{ 11,2},{ 6,3},{ 7,3},{ 9,3},{ 10,3},{ 1,4},{ 15,4},{ 2,5},{ 14,5},{ 3,6},{ 13,6},{ 3,7},{ 13,7},{ 3,9},{ 13,9},{ 3,10},{ 13,10},{ 2,11},{ 14,11},{ 1,12},{ 15,12},{ 6,13},{ 7,13},{ 9,13},{ 10,13},{ 5,14},{ 11,14},{ 4,15},{ 12,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 16,1},{ 0,2},{ 16,2},{ 0,3},{ 16,3},{ 0,4},{ 16,4},{ 0,5},{ 16,5},{ 0,6},{ 16,6},{ 0,7},{ 16,7},{ 0,9},{ 16,9},{ 0,10},{ 16,10},{ 0,11},{ 16,11},{ 0,12},{ 16,12},{ 0,13},{ 16,13},{ 0,14},{ 16,14},{ 0,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {},//enemigos MELEE
        {{ 7,7},{ 9,7},{ 7,9},{ 9,9}},//enemigos RANGED
        {{ 8,3},{ 3,8},{ 13,8},{ 8,13}},//explosivos
        {{ 7,5},{ 9,5},{ 5,7},{ 8,7},{ 11,7},{ 7,8},{ 9,8},{ 5,9},{ 8,9},{ 11,9},{ 7,11},{ 9,11}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {{ 4,1},{ 12,1},{ 5,2},{ 11,2},{ 6,3},{ 7,3},{ 9,3},{ 10,3},{ 1,4},{ 15,4},{ 2,5},{ 14,5},{ 3,6},{ 13,6},{ 3,7},{ 13,7},{ 3,9},{ 13,9},{ 3,10},{ 13,10},{ 2,11},{ 14,11},{ 1,12},{ 15,12},{ 6,13},{ 7,13},{ 9,13},{ 10,13},{ 5,14},{ 11,14},{ 4,15},{ 12,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 16,1},{ 0,2},{ 16,2},{ 0,3},{ 16,3},{ 0,4},{ 16,4},{ 0,5},{ 16,5},{ 0,6},{ 16,6},{ 0,7},{ 16,7},{ 0,9},{ 16,9},{ 0,10},{ 16,10},{ 0,11},{ 16,11},{ 0,12},{ 16,12},{ 0,13},{ 16,13},{ 0,14},{ 16,14},{ 0,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {{ 8,2},{ 2,8},{ 14,8},{ 8,14}},//enemigos melee
        {},//enemigos ranged
        {{ 8,3},{ 3,8},{ 13,8},{ 8,13}},//explosivos
        {{ 7,5},{ 9,5},{ 5,7},{ 8,7},{ 11,7},{ 7,8},{ 9,8},{ 5,9},{ 8,9},{ 11,9},{ 7,11},{ 9,11}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {{ 4,1},{ 12,1},{ 5,2},{ 11,2},{ 6,3},{ 7,3},{ 9,3},{ 10,3},{ 1,4},{ 15,4},{ 2,5},{ 14,5},{ 3,6},{ 13,6},{ 3,7},{ 13,7},{ 3,9},{ 13,9},{ 3,10},{ 13,10},{ 2,11},{ 14,11},{ 1,12},{ 15,12},{ 6,13},{ 7,13},{ 9,13},{ 10,13},{ 5,14},{ 11,14},{ 4,15},{ 12,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 16,1},{ 0,2},{ 16,2},{ 0,3},{ 16,3},{ 0,4},{ 16,4},{ 0,5},{ 16,5},{ 0,6},{ 16,6},{ 0,7},{ 16,7},{ 0,9},{ 16,9},{ 0,10},{ 16,10},{ 0,11},{ 16,11},{ 0,12},{ 16,12},{ 0,13},{ 16,13},{ 0,14},{ 16,14},{ 0,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {},//enemigos MELEE
        {{ 8,2},{ 2,8},{ 14,8},{ 8,14}},//enemigos RANGED
        {{ 8,3},{ 3,8},{ 13,8},{ 8,13}},//explosivos
        {{ 7,5},{ 9,5},{ 5,7},{ 8,7},{ 11,7},{ 7,8},{ 9,8},{ 5,9},{ 8,9},{ 11,9},{ 7,11},{ 9,11}},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        17,
        17,
        {{ 0,8},{ 8,0},{ 8,16},{ 16,8}},//puertas
        {},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 9,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 0,1},{ 16,1},{ 0,2},{ 16,2},{ 0,3},{ 16,3},{ 0,4},{ 16,4},{ 0,5},{ 16,5},{ 0,6},{ 16,6},{ 0,7},{ 16,7},{ 0,9},{ 16,9},{ 0,10},{ 16,10},{ 0,11},{ 16,11},{ 0,12},{ 16,12},{ 0,13},{ 16,13},{ 0,14},{ 16,14},{ 0,15},{ 16,15},{ 0,16},{ 1,16},{ 2,16},{ 3,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 16,16}},//paredes
        {{ 2,2},{ 14,2},{ 2,14},{ 14,14}},//enemigos melee
        {{ 8,8}},//enemigos ranged
        {},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    }

};

vector<sala> sala_19x19{
    {
        19,
        19,
        {{ 0,9},{ 9,0},{ 9,18},{ 18,9}},//puertas
        {{ 4,5},{ 15,5},{ 4,10},{ 15,10},{ 4,15},{ 15,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 8,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 17,0},{ 18,0},{ 0,1},{ 18,1},{ 0,2},{ 4,2},{ 5,2},{ 6,2},{ 7,2},{ 8,2},{ 9,2},{ 10,2},{ 11,2},{ 12,2},{ 13,2},{ 14,2},{ 15,2},{ 18,2},{ 0,3},{ 18,3},{ 0,4},{ 4,4},{ 5,4},{ 6,4},{ 7,4},{ 8,4},{ 9,4},{ 10,4},{ 11,4},{ 12,4},{ 13,4},{ 14,4},{ 15,4},{ 18,4},{ 0,5},{ 18,5},{ 0,6},{ 4,6},{ 5,6},{ 6,6},{ 7,6},{ 8,6},{ 9,6},{ 10,6},{ 11,6},{ 12,6},{ 13,6},{ 14,6},{ 15,6},{ 18,6},{ 0,7},{ 4,7},{ 5,7},{ 6,7},{ 7,7},{ 8,7},{ 9,7},{ 10,7},{ 11,7},{ 12,7},{ 13,7},{ 14,7},{ 15,7},{ 18,7},{ 0,8},{ 18,8},{ 4,9},{ 5,9},{ 6,9},{ 7,9},{ 8,9},{ 9,9},{ 10,9},{ 11,9},{ 12,9},{ 13,9},{ 14,9},{ 15,9},{ 0,10},{ 18,10},{ 0,11},{ 4,11},{ 5,11},{ 6,11},{ 7,11},{ 8,11},{ 9,11},{ 10,11},{ 11,11},{ 12,11},{ 13,11},{ 14,11},{ 15,11},{ 18,11},{ 0,12},{ 4,12},{ 5,12},{ 6,12},{ 7,12},{ 8,12},{ 9,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 14,12},{ 15,12},{ 18,12},{ 0,13},{ 18,13},{ 0,14},{ 4,14},{ 5,14},{ 6,14},{ 7,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14},{ 15,14},{ 18,14},{ 0,15},{ 18,15},{ 0,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 8,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 18,16},{ 0,17},{ 18,17},{ 0,18},{ 1,18},{ 2,18},{ 3,18},{ 4,18},{ 5,18},{ 6,18},{ 7,18},{ 8,18},{ 10,18},{ 11,18},{ 12,18},{ 13,18},{ 14,18},{ 15,18},{ 16,18},{ 17,18},{ 18,18}},//paredes
        {{ 15,3},{ 15,8},{ 15,13}},//enemigos melee
        {{ 9,5},{ 9,10},{ 9,15}},//enemigos ranged
        {{ 2,2},{ 3,2},{ 16,2},{ 4,3},{ 16,3},{ 2,4},{ 3,4},{ 16,4},{ 2,6},{ 3,6},{ 16,6},{ 2,7},{ 3,7},{ 16,7},{ 4,8},{ 16,8},{ 2,9},{ 3,9},{ 16,9},{ 2,11},{ 3,11},{ 16,11},{ 2,12},{ 3,12},{ 16,12},{ 4,13},{ 16,13},{ 2,14},{ 3,14},{ 16,14},{ 2,16},{ 3,16},{ 16,16}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    },

    {
        19,
        19,
        {{ 0,9},{ 9,0},{ 9,18},{ 18,9}},//puertas
        {{ 4,5},{ 15,5},{ 4,10},{ 15,10},{ 4,15},{ 15,15}},//obstaculos
        {{ 0,0},{ 1,0},{ 2,0},{ 3,0},{ 4,0},{ 5,0},{ 6,0},{ 7,0},{ 8,0},{ 10,0},{ 11,0},{ 12,0},{ 13,0},{ 14,0},{ 15,0},{ 16,0},{ 17,0},{ 18,0},{ 0,1},{ 18,1},{ 0,2},{ 4,2},{ 5,2},{ 6,2},{ 7,2},{ 8,2},{ 9,2},{ 10,2},{ 11,2},{ 12,2},{ 13,2},{ 14,2},{ 15,2},{ 18,2},{ 0,3},{ 18,3},{ 0,4},{ 4,4},{ 5,4},{ 6,4},{ 7,4},{ 8,4},{ 9,4},{ 10,4},{ 11,4},{ 12,4},{ 13,4},{ 14,4},{ 15,4},{ 18,4},{ 0,5},{ 18,5},{ 0,6},{ 4,6},{ 5,6},{ 6,6},{ 7,6},{ 8,6},{ 9,6},{ 10,6},{ 11,6},{ 12,6},{ 13,6},{ 14,6},{ 15,6},{ 18,6},{ 0,7},{ 4,7},{ 5,7},{ 6,7},{ 7,7},{ 8,7},{ 9,7},{ 10,7},{ 11,7},{ 12,7},{ 13,7},{ 14,7},{ 15,7},{ 18,7},{ 0,8},{ 18,8},{ 4,9},{ 5,9},{ 6,9},{ 7,9},{ 8,9},{ 9,9},{ 10,9},{ 11,9},{ 12,9},{ 13,9},{ 14,9},{ 15,9},{ 0,10},{ 18,10},{ 0,11},{ 4,11},{ 5,11},{ 6,11},{ 7,11},{ 8,11},{ 9,11},{ 10,11},{ 11,11},{ 12,11},{ 13,11},{ 14,11},{ 15,11},{ 18,11},{ 0,12},{ 4,12},{ 5,12},{ 6,12},{ 7,12},{ 8,12},{ 9,12},{ 10,12},{ 11,12},{ 12,12},{ 13,12},{ 14,12},{ 15,12},{ 18,12},{ 0,13},{ 18,13},{ 0,14},{ 4,14},{ 5,14},{ 6,14},{ 7,14},{ 8,14},{ 9,14},{ 10,14},{ 11,14},{ 12,14},{ 13,14},{ 14,14},{ 15,14},{ 18,14},{ 0,15},{ 18,15},{ 0,16},{ 4,16},{ 5,16},{ 6,16},{ 7,16},{ 8,16},{ 9,16},{ 10,16},{ 11,16},{ 12,16},{ 13,16},{ 14,16},{ 15,16},{ 18,16},{ 0,17},{ 18,17},{ 0,18},{ 1,18},{ 2,18},{ 3,18},{ 4,18},{ 5,18},{ 6,18},{ 7,18},{ 8,18},{ 10,18},{ 11,18},{ 12,18},{ 13,18},{ 14,18},{ 15,18},{ 16,18},{ 17,18},{ 18,18}},//paredes
        {{ 9,5},{ 9,10},{ 9,15}},//enemigos MELEE
        {{ 15,3},{ 15,8},{ 15,13}},//enemigos RANGED
        {{ 2,2},{ 3,2},{ 16,2},{ 4,3},{ 16,3},{ 2,4},{ 3,4},{ 16,4},{ 2,6},{ 3,6},{ 16,6},{ 2,7},{ 3,7},{ 16,7},{ 4,8},{ 16,8},{ 2,9},{ 3,9},{ 16,9},{ 2,11},{ 3,11},{ 16,11},{ 2,12},{ 3,12},{ 16,12},{ 4,13},{ 16,13},{ 2,14},{ 3,14},{ 16,14},{ 2,16},{ 3,16},{ 16,16}},//explosivos
        {},//trampas
        {},//curas
        {},//recompensas
        {}//salidas mazmorra

    }
};

vector<vector<sala>> salas_vector{
    sala_11x11,sala_15x15,sala_17x17,sala_19x19
};


void rellenaSala(vector<vector<char>>& m, vector<coordenada> v, char c) {
    if (!v.empty()) {
        for (int i = 0; i < v.size(); i++) {
            m[v[i].y][v[i].x] = c;
        }
    }
}


void pintaSala(sala s) {

    vector<vector<char>> mapa;
    for (int i = 0; i < s.tamy; i++) {
        mapa.push_back({});
        for (int j = 0; j < s.tamx; j++) {
            if (i > 0 && j > 0 && i < s.tamy - 1 && j < s.tamx - 1) {
                mapa[i].push_back('.');
            }
            else {
                mapa[i].push_back(c_pared);
            }
        }
    }


    rellenaSala(mapa, s.cura, c_cura);

    rellenaSala(mapa, s.enemigo_melee, c_ene_melee);

    rellenaSala(mapa, s.enemigo_ranged, c_ene_ran);

    rellenaSala(mapa, s.explosivo, c_explosivo);

    rellenaSala(mapa, s.obstaculo, c_obstaculo);

    rellenaSala(mapa, s.pared, c_pared);

    rellenaSala(mapa, s.puerta, c_puerta);

    rellenaSala(mapa, s.recompensa, c_recompensa);

    rellenaSala(mapa, s.trampa, c_trampa);

    rellenaSala(mapa, s.salida, c_salida);

    for (int i = 0; i < s.tamy; i++) {

        for (int j = 0; j < s.tamx; j++) {
            cout << mapa[i][j] << " ";
        }
        cout << "\n";
    }
}

void imprimeVector(const vector<coordenada>& c) {
    cout << "\t{";
    for (int i = 0; i < c.size(); i++) {
        cout << "{ " << c[i].y << "," << c[i].x << "}";
        if (i < c.size() - 1) {
            cout << ",";
        }
    }
    cout << "}";
}

void imprimeJSON(const sala& sala_aux) {
    cout << "{\n\t" << sala_aux.tamy << ",\n\t" << sala_aux.tamx << ",\n";
    imprimeVector(sala_aux.puerta);
    cout << ",//puertas\n";
    imprimeVector(sala_aux.obstaculo);
    cout << ",//obstaculos\n";
    imprimeVector(sala_aux.pared);
    cout << ",//paredes\n";
    imprimeVector(sala_aux.enemigo_melee);
    cout << ",//enemigos melee\n";
    imprimeVector(sala_aux.enemigo_ranged);
    cout << ",//enemigos ranged\n";
    imprimeVector(sala_aux.explosivo);
    cout << ",//explosivos\n";
    imprimeVector(sala_aux.trampa);
    cout << ",//trampas\n";
    imprimeVector(sala_aux.cura);
    cout << ",//curas\n";
    imprimeVector(sala_aux.recompensa);
    cout << ",//recompensas\n";
    imprimeVector(sala_aux.salida);
    cout << "//salidas mazmorra\n";
    cout << "\n},\n";
}

void imprimeVectorJSON(const sala& s) {

    vector<vector<int>> mapa_paredes;
    for (int fila = 0; fila < s.tamy * 2; fila++) {
        mapa_paredes.push_back({});
        for (int col = 0; col < s.tamx * 2; col++) {
            mapa_paredes[fila].push_back(0);
        }
    }

    for (int i = 0; i < s.pared.size(); i++) {
        mapa_paredes[s.pared[i].y * 2][s.pared[i].x * 2] = i_pared_negro;
        mapa_paredes[s.pared[i].y * 2 + 1][s.pared[i].x * 2] = i_pared_negro;
        mapa_paredes[s.pared[i].y * 2][s.pared[i].x * 2 + 1] = i_pared_negro;
        mapa_paredes[s.pared[i].y * 2 + 1][s.pared[i].x * 2 + 1] = i_pared_negro;
    }




    for (int fila = 0; fila < s.tamy * 2; fila++) {

        for (int col = 0; col < s.tamx * 2; col++) {

            if (mapa_paredes[fila][col] != 0) {

                bool u, ul, ur, l, dl, r, dr, d;

                //arriba
                if (fila == 0) {
                    u = true;
                }
                else {
                    u = mapa_paredes[fila - 1][col] > 0 ? true : false;
                }

                //arriba izquierda
                if (fila == 0 || col == 0) {
                    ul = true;
                }
                else {
                    ul = mapa_paredes[fila - 1][col - 1] > 0 ? true : false;
                }

                //arriba derecha
                if (fila == 0 || col == s.tamx * 2 - 1) {
                    ur = true;
                }
                else {
                    ur = mapa_paredes[fila - 1][col + 1] > 0 ? true : false;
                }

                //abajo
                if (fila == s.tamy * 2 - 1) {
                    d = true;
                }
                else {
                    d = mapa_paredes[fila + 1][col] > 0 ? true : false;
                }

                //izquierda
                if (col == 0) {
                    l = true;
                }
                else {
                    l = mapa_paredes[fila][col - 1] > 0 ? true : false;
                }

                //derecha
                if (col == s.tamx * 2 - 1) {
                    r = true;
                }
                else {
                    r = mapa_paredes[fila][col + 1] > 0 ? true : false;
                }

                //abajo izquierda
                if (fila == s.tamy * 2 - 1 || col == 0) {
                    dl = true;
                }
                else {
                    dl = mapa_paredes[fila + 1][col - 1] > 0 ? true : false;
                }

                //abajo derecha
                if (fila == s.tamy * 2 - 1 || col == s.tamx * 2 - 1) {
                    dr = true;
                }
                else {
                    dr = mapa_paredes[fila + 1][col + 1] > 0 ? true : false;
                }

                vector<bool> adyacente = { u,ur,r,dr,d,dl,l,ul };

                if (adyacente[0] &&
                    adyacente[1] &&
                    adyacente[2] &&
                    adyacente[3] &&
                    adyacente[4] &&
                    adyacente[5] &&
                    adyacente[6] &&
                    adyacente[7]) {
                    mapa_paredes[fila][col] = i_pared_negro;
                }


                /*
                701
                6*2
                543

                ###
                #*#
                ?.?

                */

                else if (adyacente[0] &&
                    adyacente[1] &&
                    adyacente[2] &&
                    //adyacente[3] &&
                    !adyacente[4] &&
                    //adyacente[5] &&
                    adyacente[6] &&
                    adyacente[7]) {
                    mapa_paredes[fila][col] = i_pared_u;
                }

                /*
                701
                6*2
                543

                ?.?
                #*#
                ###

                */

                else if (!adyacente[0] &&
                    //!adyacente[1] &&
                    adyacente[2] &&
                    adyacente[3] &&
                    adyacente[4] &&
                    adyacente[5] &&
                    adyacente[6]
                    //!adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_d;
                }

                /*
                701
                6*2
                543

                ?##
                .*#
                ?##

                */


                else if (
                    adyacente[0]
                    && adyacente[1]
                    && adyacente[2]
                    && adyacente[3]
                    && adyacente[4]
                    //&& adyacente[5]
                    && !adyacente[6]
                    //&& adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_r;
                }

                /*
                701
                6*2
                543

                ##?
                #*.
                ##?

                */

                else if (
                    adyacente[0]
                    //&& adyacente[1]
                    && !adyacente[2]
                    //&& adyacente[3]
                    && adyacente[4]
                    && adyacente[5]
                    && adyacente[6]
                    && adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_l;
                }

                /*
                701
                6*2
                543

                ###
                #*#
                ##.

                */

                else if (
                    adyacente[0]
                    && adyacente[1]
                    && adyacente[2]
                    && !adyacente[3]
                    && adyacente[4]
                    && adyacente[5]
                    && adyacente[6]
                    && adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_peque単a_ul;
                }

                /*
                701
                6*2
                543

                ###
                #*#
                .##

                */

                else if (
                    adyacente[0]
                    && adyacente[1]
                    && adyacente[2]
                    && adyacente[3]
                    && adyacente[4]
                    && !adyacente[5]
                    && adyacente[6]
                    && adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_peque単a_ur;
                }

                /*
                701
                6*2
                543

                .##
                #*#
                ###

                */

                else if (
                    adyacente[0]
                    && adyacente[1]
                    && adyacente[2]
                    && adyacente[3]
                    && adyacente[4]
                    && adyacente[5]
                    && adyacente[6]
                    && !adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_peque単a_dr;
                }

                /*
                701
                6*2
                543

                ##.
                #*#
                ###

                */

                else if (
                    adyacente[0]
                    && !adyacente[1]
                    && adyacente[2]
                    && adyacente[3]
                    && adyacente[4]
                    && adyacente[5]
                    && adyacente[6]
                    && adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_peque単a_dl;
                }

                /*
                701
                6*2
                543

                .#?
                .*#
                ?..

                */

                else if (
                    adyacente[0]
                    //&& !adyacente[1]
                    && adyacente[2]
                    && !adyacente[3]
                    && !adyacente[4]
                    //&& adyacente[5]
                    && !adyacente[6]
                    && !adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_grande_dl;
                }
                /*
                701
                6*2
                543

                ?#.
                #*.
                ..?

                */

                else if (
                    adyacente[0]
                    && !adyacente[1]
                    && !adyacente[2]
                    //&& !adyacente[3]
                    && !adyacente[4]
                    && !adyacente[5]
                    && adyacente[6]
                    //&& !adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_grande_dr;
                }
                /*
                701
                6*2
                543

                ?..
                .*#
                .#?

                */

                else if (
                    !adyacente[0]
                    && !adyacente[1]
                    && adyacente[2]
                    //&& !adyacente[3]
                    && adyacente[4]
                    && !adyacente[5]
                    && !adyacente[6]
                    //&& !adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_grande_ul;
                }

                /*
                701
                6*2
                543

                ..?
                #*.
                ?#.

                */

                else if (
                    !adyacente[0]
                    //&& !adyacente[1]
                    && !adyacente[2]
                    && !adyacente[3]
                    && adyacente[4]
                    //&& adyacente[5]
                    && adyacente[6]
                    && !adyacente[7]
                    ) {
                    mapa_paredes[fila][col] = i_pared_esquina_grande_ur;
                }






            }

        }
    }



    for (int fila = 0; fila < s.tamy * 2; fila++) {
        for (int col = 0; col < s.tamx * 2; col++) {
            if (mapa_paredes[fila][col] == 0) {
                cout << "0";
            }
            else {
                cout << mapa_paredes[fila][col];
                
            }
            if (fila != (s.tamy * 2) - 1 || col != (s.tamx * 2) - 1) {
                cout << ",";
            }

        }
        cout << "\n";
    }



}

void CREARJSON(const sala& s) {

    const int tam_tile = 16;
    printf("{\n\"compressionlevel\":-1,");
    printf("\n\"height\" : %d,", s.tamy * 2);
    printf("\n\"infinite\" : false,\n\"layers\" : [{\n\"data\": [\n");
    imprimeVectorJSON(s);
    printf("\n],\n\"height\": %d,", s.tamy * 2);
    printf("\n\"id\" : 1,");
    printf("\n\"name\" : \"Paredes\",");
    printf("\n\"opacity\" : 1,");
    printf("\n\"type\" : \"tilelayer\",");
    printf("\n\"visible\" : true,");
    printf("\n\"width\" : %d ,", s.tamx * 2);

    printf("\n\"x\" : 0,\n\"y\" : 0}\n],");
    printf("\n\"nextlayerid\":5,");
    printf("\n\"nextobjectid\" : 1,");
    printf("\n\"orientation\" : \"orthogonal\",");
    printf("\n\"renderorder\" : \"right-down\",");
    printf("\"tiledversion\" : \"1.11.2\",");
    printf("\n\"tileheight\" : %d,", tam_tile);
    printf("\n\"tilesets\" : [{");

    
    printf("\n\"columns\": %d,",25);
    printf("\n\"firstgid\": %d," , 1);
    printf("\n\"image\": \"..\/sprites\/Pixel Crawler - FREE - 1.8\/Environment\/Dungeon Prison\/Assets\/Tiles.png\",");
    printf("\n\"imageheight\": %d," , 400);
    printf("\n\"imagewidth\": %d," , 400);
    printf("\n\"margin\": %d," , 0);
    printf("\n\"name\": \"TilesDungeon\",");
    printf("\n\"spacing\": %d," , 0);
    printf("\n\"tilecount\": %d," , 625);
    printf("\n\"tileheight\": %d," , 16);
    printf("\n\"tilewidth\": %d", 16);
    
    printf("\n}],\n\"tilewidth\" :%d,", tam_tile);
    printf("\n\"type\" : \"map\",");
    printf("\n\"version\" : \"1.10\",");
    printf("\n\"width\" : %d}\n", s.tamx * 2);
}

bool cabeLaSala(const vector<vector<char>>& m, int posy, int posx, sala s, int dir) {

    int cx = -1, cy = -1, fx = -1, fy = -1;
    //0 = arriba, 1= izquierda, 2 = derecha, 3 = abajo
    if (dir == 0) {
        fy = posy - 1;
        cy = posy - s.tamy;
        cx = posx - (s.tamx / 2);
        fx = posx + (s.tamx / 2);
    }
    if (dir == 1) {
        cy = posy - (s.tamy / 2);
        fy = posy + (s.tamy / 2);
        fx = posx - 1;
        cx = posx - s.tamx;
    }
    if (dir == 2) {
        cy = posy - (s.tamy / 2);
        fy = posy + (s.tamy / 2);
        cx = posx + 1;
        fx = posx + s.tamx;
    }
    if (dir == 3) {
        cy = posy + 1;
        fy = posy + s.tamy;
        cx = posx - (s.tamx / 2);
        fx = posx + (s.tamx / 2);
    }
    //comprobamos que no nos salimos de rango
    if (cy < 0 || cy >= tamy ||
        fy < 0 || fy >= tamy ||
        cx < 0 || cx >= tamx ||
        fx < 0 || fx >= tamx
        ) {
        return false;
    }



    for (int i = cy; i < fy; i++) {
        for (int j = cx; j < fx; j++) {
            if (m[i][j] != c_vacio) {
                return false;
            }
        }
    }

    return true;

}

void pintaSalaOffset(vector<vector<char>>& m, int ofy, int ofx, vector<coordenada> v, char c) {

    while (!v.empty()) {
        int cx = v[v.size() - 1].x + ofx, cy = v[v.size() - 1].y + ofy;

        if (v[v.size() - 1].x != -1 && v[v.size() - 1].y != -1) {
            m[cy][cx] = c;
        }
        v.pop_back();
    }

}

void ponerSala(vector<vector<char>>& m, int posy, int posx, sala s, int dir, vector<vector<coordenada>>& puertas) {



    int cx = -1, cy = -1;
    //0 = arriba, 1= izquierda, 2 = derecha, 3 = abajo
    if (dir == 0) {
        cy = posy - s.tamy;
        cx = posx - (s.tamx / 2);
    }
    if (dir == 1) {
        cy = posy - (s.tamy / 2);
        cx = posx - s.tamx;
    }
    if (dir == 2) {
        cy = posy - (s.tamy / 2);
        cx = posx + 1;
    }
    if (dir == 3) {
        cy = posy + 1;
        cx = posx - (s.tamx / 2);
    }
    if (dir == -1) {
        cy = posy;
        cx = posx;

    }



    pintaSalaOffset(m, cy, cx, s.cura, c_cura);
    pintaSalaOffset(m, cy, cx, s.enemigo_melee, c_ene_melee);
    pintaSalaOffset(m, cy, cx, s.enemigo_ranged, c_ene_ran);
    pintaSalaOffset(m, cy, cx, s.explosivo, c_explosivo);
    pintaSalaOffset(m, cy, cx, s.obstaculo, c_obstaculo);
    pintaSalaOffset(m, cy, cx, s.pared, c_pared);

    if (dir != -1) {
        m[posy][posx] = c_vacio;
        puertas[dir].pop_back();
    }

    pintaSalaOffset(m, cy, cx, s.puerta, c_puerta);
    if (s.puerta[0].x != -1 && s.puerta[0].y != -1 && dir != 3) {
        puertas[0].push_back({ cy + s.puerta[0].y ,cx + s.puerta[0].x });
    }
    else if (dir == 3) {
        m[cy + s.puerta[0].y][cx + s.puerta[0].x] = c_vacio;
    }
    if (s.puerta[1].x != -1 && s.puerta[1].y != -1 && dir != 2) {
        puertas[1].push_back({ cy + s.puerta[1].y ,cx + s.puerta[1].x });
    }
    else if (dir == 2) {
        m[cy + s.puerta[1].y][cx + s.puerta[1].x] = c_vacio;
    }
    if (s.puerta[2].x != -1 && s.puerta[2].y != -1 && dir != 1) {
        puertas[2].push_back({ cy + s.puerta[2].y ,cx + s.puerta[2].x });
    }
    else if (dir == 1) {
        m[cy + s.puerta[2].y][cx + s.puerta[2].x] = c_vacio;
    }
    if (s.puerta[3].x != -1 && s.puerta[3].y != -1 && dir != 0) {
        puertas[3].push_back({ cy + s.puerta[3].y ,cx + s.puerta[3].x });
    }
    else if (dir == 0) {
        m[cy + s.puerta[3].y][cx + s.puerta[3].x] = c_vacio;
    }
    pintaSalaOffset(m, cy, cx, s.recompensa, c_recompensa);
    pintaSalaOffset(m, cy, cx, s.trampa, c_trampa);
    pintaSalaOffset(m, cy, cx, s.salida, c_salida);


}

vector<vector<char>> generamazmorra() {


    //creamos mapa
    vector<vector<char>> m;
    for (int fila = 0; fila < tamy; fila++) {
        m.push_back({});
        for (int col = 0; col < tamx; col++) {
            m[fila].push_back(c_vacio);
        }
    }

    //0 = arriba, 1= izquierda, 2 = derecha, 3 = abajo
    vector<vector<coordenada>> puertas = { {},{},{},{} };

    //ponemos sala de inicio
    ponerSala(m, tamy / 2 - (salaPPal.tamy / 2), tamx / 2 - (salaPPal.tamx / 2), salaPPal, -1, puertas);

    int salas_puestas = 1;
    int errores_consecutivos = 0;
    while (salas_puestas != num_salas && errores_consecutivos <= max_errores) {

        random_device rd;
        mt19937 gen(rd()); // Generador Mersenne Twister

        // Definir el rango del n炭mero aleatorio
        uniform_int_distribution<> dir(0, 3); // Enteros entre 1 y 100

        int direccion_expansion = dir(gen);

        uniform_int_distribution<> tam(0, 3); // Enteros entre 1 y 100

        int tam_sala = tam(gen);

        uniform_int_distribution<> sal(0, salas_vector[tam_sala].size() - 1); // Enteros entre 1 y 100

        int sala_concreta = sal(gen);

        if (!puertas[direccion_expansion].empty()) {


            int ul_elem = puertas[direccion_expansion].size() - 1;

            if (cabeLaSala(m, puertas[direccion_expansion][ul_elem].y, puertas[direccion_expansion][ul_elem].x, salas_vector[tam_sala][sala_concreta], direccion_expansion)) {

                errores_consecutivos = 0;
                ponerSala(m, puertas[direccion_expansion][ul_elem].y, puertas[direccion_expansion][ul_elem].x, salas_vector[tam_sala][sala_concreta], direccion_expansion, puertas);
                salas_puestas++;

            }
            else {
                errores_consecutivos++;
            }
        }


    }

    //limpiamos las paredes que sobran

    for (int i = 0; i < puertas.size(); i++) {
        for (int j = 0; j < puertas[i].size(); j++) {
            m[puertas[i][j].y][puertas[i][j].x] = c_pared;
        }
    }


    return m;


}

sala traduce_sala() {
    cout << "introduce el numero de filas del mapa:";
    int x, y;
    cin >> y;
    cout << "introduce el numero de columnas del mapa:";
    cin >> x;
    sala sala_aux;
    sala_aux.tamx = x;
    sala_aux.tamy = y;
    cout << "introduce el mapa con caracteres\n";
    char c;
    for (int i = 0; i < y; i++) {
        for (int j = 0; j < x; j++) {
            cin >> c;
            /*
            c_pared = '#',
            c_puerta = 'P',
            c_obstaculo = 'O',
            c_explosivo = 'X',
            c_trampa = 'T',
            c_ene_ran = 'e',
            c_ene_melee = 'E',
            c_cura = 'C',
            c_recompensa = 'R';
            c_salida = 'S'
            */
            switch (c) {
            case c_pared:
                sala_aux.pared.push_back({ i,j });
                break;
            case c_puerta:
                sala_aux.puerta.push_back({ i,j });
                break;
            case c_obstaculo:
                sala_aux.obstaculo.push_back({ i,j });
                break;
            case c_explosivo:
                sala_aux.explosivo.push_back({ i,j });
                break;
            case c_trampa:
                sala_aux.trampa.push_back({ i,j });
                break;
            case c_ene_ran:
                sala_aux.enemigo_ranged.push_back({ i,j });
                break;
            case c_ene_melee:
                sala_aux.enemigo_melee.push_back({ i,j });
                break;
            case c_cura:
                sala_aux.cura.push_back({ i,j });
                break;
            case c_recompensa:
                sala_aux.recompensa.push_back({ i,j });
                break;
            case c_salida:
                sala_aux.salida.push_back({ i,j });
                break;
            default:
                break;

            }
        }
    }
    return sala_aux;
}

sala traduce_mazmorra_a_sala(vector<vector<char>>m) {
    
    int x=m[0].size(), y=m.size();
    sala sala_aux;
    sala_aux.tamx = x;
    sala_aux.tamy = y;
    for (int i = 0; i < y; i++) {
        for (int j = 0; j < x; j++) {
            char c= m[i][j];
            /*
            c_pared = '#',
            c_puerta = 'P',
            c_obstaculo = 'O',
            c_explosivo = 'X',
            c_trampa = 'T',
            c_ene_ran = 'e',
            c_ene_melee = 'E',
            c_cura = 'C',
            c_recompensa = 'R';
            c_salida = 'S'
            */
            switch (c) {
            case c_pared:
                sala_aux.pared.push_back({ i,j });
                break;
            case c_puerta:
                sala_aux.puerta.push_back({ i,j });
                break;
            case c_obstaculo:
                sala_aux.obstaculo.push_back({ i,j });
                break;
            case c_explosivo:
                sala_aux.explosivo.push_back({ i,j });
                break;
            case c_trampa:
                sala_aux.trampa.push_back({ i,j });
                break;
            case c_ene_ran:
                sala_aux.enemigo_ranged.push_back({ i,j });
                break;
            case c_ene_melee:
                sala_aux.enemigo_melee.push_back({ i,j });
                break;
            case c_cura:
                sala_aux.cura.push_back({ i,j });
                break;
            case c_recompensa:
                sala_aux.recompensa.push_back({ i,j });
                break;
            case c_salida:
                sala_aux.salida.push_back({ i,j });
                break;
            default:
                break;

            }
        }
    }
    return sala_aux;
}

int main() {


    int prueba = 1;

    if (prueba == 0) {
        for (int i = 0; i < salas_vector.size(); i++) {

            for (int j = 0; j < salas_vector[i].size(); j++) {
                pintaSala(salas_vector[i][j]);
                imprimeVectorJSON(salas_vector[i][j]);

            }

        }
    }
    if (prueba == 1) {

        char c = '0';

        do {
            vector<vector<char>>mapa = generamazmorra();

            for (int i = 0; i < mapa.size(); i++) {
                for (int j = 0; j < mapa[0].size(); j++) {
                    cout << mapa[i][j];
                }
                cout << "\n";
            }

            cout << "\n\n";

            sala mazmorra_sala = traduce_mazmorra_a_sala(mapa);


            CREARJSON(mazmorra_sala);

            cin >> c;
        } while (c != '0');

    }


    /*
    while (0)pintaSala(traduce_sala());

    for (int i = 0; i < salas.size(); i++) {
        cout << salas[i].tamy << " " << salas[i].tamx << "\n";

        pintaSala(salas[i]);

        cout << "\n";
    }
    */



    //cout << salas.size();
        /*
        sala x;
        x.tamx = 2;

        vector<sala> vec;
        while ( x.tamx != 1) {
            x = traduce_sala();
            if (x.tamx != 1) {
                vec.push_back(x);
            }
        }

    for (int i = 0; i < vec.size(); i++) {

        imprimeJSON(vec[i]);

        cout << "\n";
    }
    #endif
        */
    return 0;
}
